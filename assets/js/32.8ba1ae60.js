(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{343:function(e,n,s){"use strict";s.r(n);var t=s(25),r=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"sets"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sets"}},[e._v("#")]),e._v(" Sets")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('# 往集合key中增加元素\nsadd key value [value ...]\n\n# 删除集合中集为value等的元素\n# 返回值: 忽略不存在的元素后,真正删除掉的元素的个数\nsrem key value [value ...]\n\n# 返回并删除集合中key中1个随机元素\nspop key\n\n# 返回集合key中,随机的1个元素\nsrandmember key\n\n# 判断value是否在key集合中, 是返回1,否返回0\nsismember key value\n\n# 返回集中中所有的元素\nsmembers key\n\n# 返回集合中元素的个数\nscard key\n\n# 把source中的value删除,并添加到dest集合中\nsmove source dest value\n\n# 求出key1 key2 key3 三个集合中的交集,并返回\nsinter key1 key2 key3\n\nredis 127.0.0.1:6379> sadd s1 0 2 4 6\n(integer) 4\nredis 127.0.0.1:6379> sadd s2 1 2 3 4\n(integer) 4\nredis 127.0.0.1:6379> sadd s3 4 8 9 12\n(integer) 4\nredis 127.0.0.1:6379> sinter s1 s2 s3\n1) "4"\nredis 127.0.0.1:6379> sinter s3 s1 s2\n"4"\n\n# 求出key1 key2 key3 三个集合中的交集,并赋给dest\nsinterstore dest key1 key2 key3\n\n\n# 求出key1 key2 keyn的并集\nsunion key1 key2.. Keyn\n\n# 求出key1与key2 key3的差集\nsdiff key1 key2 key3 \n\n')])])]),n("h3",{attrs:{id:"有序集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有序集合"}},[e._v("#")]),e._v(" 有序集合")]),e._v(" "),n("blockquote",[n("p",[e._v("添加元素")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("zadd key score1 value1 score2 value2 ..\n\nredis 127.0.0.1:6379> zadd stu 18 lily 19 hmm 20 lilei 21 lilei\n(integer) 3\n\n")])])]),n("blockquote",[n("p",[e._v("删除集合中的元素")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("zrem key value1 value2 ..\n")])])]),n("blockquote",[n("p",[e._v("返回元素个数")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("zcard key\n")])])]),n("blockquote",[n("p",[e._v("返回[min,max] 区间内元素的数量")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("zcount key min max\n")])])]),n("blockquote",[n("p",[e._v("按照socre来删除元素,删除score在[min,max]之间的")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zremrangebyscore key min max\n\nredis 127.0.0.1:6379> zremrangebyscore stu 4 10\n(integer) 2\nredis 127.0.0.1:6379> zrange stu 0 -1\n1) "f"\n')])])]),n("blockquote",[n("p",[e._v("按排名删除元素,删除名次在[start,end]之间的")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zremrangebyrank key start end\n\nredis> ZADD myzset 1 "one"\n(integer) 1\nredis> ZADD myzset 2 "two"\n(integer) 1\nredis> ZADD myzset 3 "three"\n(integer) 1\nredis> ZREMRANGEBYRANK myzset 0 1\n(integer) 2\nredis> ZRANGE myzset 0 -1 WITHSCORES\n1) "three"\n2) "3"\n')])])]),n("blockquote",[n("p",[e._v("查询member的排名(升续 0名开始)")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zrank key member\n\nredis> ZADD myzset 1 "one"\n(integer) 1\nredis> ZADD myzset 2 "two"\n(integer) 1\nredis> ZADD myzset 3 "three"\n(integer) 1\nredis> ZRANK myzset "three"\n(integer) 2\nredis> ZRANK myzset "four"\n(nil)\n\n')])])]),n("blockquote",[n("p",[e._v("查询 member的排名(降续 0名开始)")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zrevrank key memeber\n\nredis> ZADD myzset 1 "one"\n(integer) 1\nredis> ZADD myzset 2 "two"\n(integer) 1\nredis> ZADD myzset 3 "three"\n(integer) 1\nredis> ZREVRANK myzset "one"\n(integer) 2\nredis> ZREVRANK myzset "four"\n(nil)\n\n')])])]),n("blockquote",[n("p",[e._v("把集合排序后,返回名次[start,stop]的元素")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('ZRANGE key start stop [WITHSCORES]\n\nredis> ZADD myzset 1 "one"\n(integer) 1\nredis> ZADD myzset 2 "two"\n(integer) 1\nredis> ZADD myzset 3 "three"\n(integer) 1\nredis> ZRANGE myzset 0 -1\n1) "one"\n2) "two"\n3) "three"\nredis> ZRANGE myzset 2 3\n1) "three"\nredis> ZRANGE myzset -2 -1\n1) "two"\n2) "three"\n')])])]),n("blockquote",[n("p",[e._v("把集合降序排列,取名字[start,stop]之间的元素")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zrevrange key start stop\n\nredis> ZADD myzset 1 "one"\n(integer) 1\nredis> ZADD myzset 2 "two"\n(integer) 1\nredis> ZADD myzset 3 "three"\n(integer) 1\nredis> ZREVRANGE myzset 0 -1\n1) "three"\n2) "two"\n3) "one"\nredis> ZREVRANGE myzset 2 3\n1) "one"\nredis> ZREVRANGE myzset -2 -1\n1) "two"\n2) "one"\n')])])]),n("blockquote",[n("p",[e._v("集合(升续)排序后,取score在[min,max]内的元素, 并跳过 offset个, 取出N个")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zrangebyscore  key min max [withscores] limit offset N\n\nredis 127.0.0.1:6379> zadd stu 1 a 3 b 4 c 9 e 12 f 15 g\n(integer) 6\nredis 127.0.0.1:6379> zrangebyscore stu 3 12 limit 1 2 withscores\n1) "c"\n2) "4"\n3) "e"\n4) "9"\n')])])]),n("blockquote",[n("p",[e._v("求key1-keyn的交集")])]),e._v(" "),n("p",[e._v("求key1,key2的交集,key1,key2的权重分别是 weight1,weight2\n聚合方法用: sum |min|max\n聚合的结果,保存在dest集合内")]),e._v(" "),n("p",[e._v("注意: weights ,aggregate如何理解?\n答: 如果有交集, 交集元素又有socre,score怎么处理?\nAggregate sum->score相加   , min 求最小score, max 最大score")]),e._v(" "),n("p",[e._v("另: 可以通过weigth设置不同key的权重, 交集时,socre * weights")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('zinterstore destination numkeys key1 [key2 ...] \n[WEIGHTS weight [weight ...]] \n[AGGREGATE SUM|MIN|MAX]\n\n详见下例\nredis 127.0.0.1:6379> zadd z1 2 a 3 b 4 c\n(integer) 3\nredis 127.0.0.1:6379> zadd z2 2.5 a 1 b 8 d\n(integer) 3\nredis 127.0.0.1:6379> zinterstore tmp 2 z1 z2\n(integer) 2\nredis 127.0.0.1:6379> zrange tmp 0 -1\n1) "b"\n2) "a"\nredis 127.0.0.1:6379> zrange tmp 0 -1 withscores\n1) "b"\n2) "4"\n3) "a"\n4) "4.5"\nredis 127.0.0.1:6379> zinterstore tmp 2 z1 z2 aggregate sum\n(integer) 2\nredis 127.0.0.1:6379> zrange tmp 0 -1 withscores\n1) "b"\n2) "4"\n3) "a"\n4) "4.5"\nredis 127.0.0.1:6379> zinterstore tmp 2 z1 z2 aggregate min\n(integer) 2\nredis 127.0.0.1:6379> zrange tmp 0 -1 withscores\n1) "b"\n2) "1"\n3) "a"\n4) "2"\nredis 127.0.0.1:6379> zinterstore tmp 2 z1 z2 weights 1 2\n(integer) 2\nredis 127.0.0.1:6379> zrange tmp 0 -1 withscores\n1) "b"\n2) "5"\n3) "a"\n4) "7"\n\n')])])])])}),[],!1,null,null,null);n.default=r.exports}}]);